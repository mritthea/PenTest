#!/bin/bash

# Variables
network_range=""
output_dir=""
scan_type=""
password_list=""

# Functions

# Function to get user input
get_user_input() {
  echo "Enter the network range (e.g., 192.168.1.0/24):"
  read network_range

  echo "Enter the name for the output directory:"
  read output_dir

  echo "Choose scan type: 'Basic' or 'Full'"
  read scan_type

  if [[ $scan_type == "Full" ]]; then
    echo "Do you want to use the default password list or a custom one? (default/custom)"
    read pw_list_choice

    if [[ $pw_list_choice == "custom" ]]; then
      echo "Enter the path to your custom password list:"
      read password_list
    else
      password_list="./def_pass.txt" # Default password list
    fi
  fi
}

# Function to validate input
validate_input() {
  if [[ -z "$network_range" || -z "$output_dir" || -z "$scan_type" ]]; then
    echo "Invalid input. Please provide all required information."
    exit 1
  fi
}

# Function to create output directory
create_output_dir() {
  if [ ! -d "$output_dir" ]; then
    mkdir -p "$output_dir"
  fi
}

# Function to perform network scanning
network_scan() {
  if [[ $scan_type == "Basic" ]]; then
    nmap -sS -sU -A -oN "$output_dir/basic_scan.txt" "$network_range"
  elif [[ $scan_type == "Full" ]]; then
    nmap -sS -sU -A -sC -oN "$output_dir/full_scan.txt" "$network_range"
    nmap --script vuln -oN "$output_dir/vuln_scan.txt" "$network_range"
  fi
}

# Function to check for weak passwords
check_weak_passwords() {
  echo "Checking for weak passwords..."
  for service in ssh rdp ftp telnet; do
    if [[ $service == "ssh" ]]; then
      hydra -L userlist.txt -P "$password_list" -o "$output_dir/hydra_ssh.txt" -t 4 ssh://"$network_range"
    elif [[ $service == "rdp" ]]; then
      hydra -L userlist.txt -P "$password_list" -o "$output_dir/hydra_rdp.txt" -t 4 rdp://"$network_range"
    elif [[ $service == "ftp" ]]; then
      hydra -L userlist.txt -P "$password_list" -o "$output_dir/hydra_ftp.txt" -t 4 ftp://"$network_range"
    elif [[ $service == "telnet" ]]; then
      hydra -L userlist.txt -P "$password_list" -o "$output_dir/hydra_telnet.txt" -t 4 telnet://"$network_range"
    fi
  done
}

# Function to map vulnerabilities
map_vulnerabilities() {
  if [[ $scan_type == "Full" ]]; then
    echo "Mapping vulnerabilities..."
    searchsploit --nmap "$output_dir/full_scan.txt" > "$output_dir/searchsploit_results.txt"
  fi
}

# Function to log results
log_results() {
  echo "Logging results..."
  cat "$output_dir"/*.txt > "$output_dir/summary.txt"
  zip -r "$output_dir/results.zip" "$output_dir"
}

# Main Script Execution

get_user_input
validate_input
create_output_dir
network_scan

if [[ $scan_type == "Full" ]]; then
  check_weak_passwords
  map_vulnerabilities
fi

log_results

echo "Scan complete. Results saved in $output_dir."
